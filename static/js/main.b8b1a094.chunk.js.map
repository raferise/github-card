{"version":3,"sources":["apis/GithubAPI.js","components/GithubCard.js","components/ToggleableCard.js","App.js","apis/DebounceAPI.js","reportWebVitals.js","index.js"],"names":["GithubAPI","getUser","username","a","fetch","resp","ok","json","Error","status","console","error","name","login","message","bio","getSuggestions","partialUsername","items","GithubCard","props","useState","userData","setUserData","useEffect","then","user","fetched","Card","className","Img","variant","src","avatar_url","Body","Title","Subtitle","Text","Footer","viewBox","version","width","height","fillRule","d","public_repos","Spinner","animation","role","ToggleableCard","showUser","setShowUser","Button","onClick","state","App","final","current","form","setForm","suggestionsBox","useRef","suggestions","setSuggestions","showSuggestions","setShowSuggestions","callback","delay","timeout","args","clearTimeout","setTimeout","getDebouncer","suggs","finalize","handleUseSuggestion","event","target","innerText","handleFocusIn","preHeight","clientHeight","style","transitionDuration","autoHeight","InputGroup","onKeyDown","code","preventDefault","ListGroup","ref","map","Item","action","onMouseDown","id","FormControl","value","onChange","onFocus","onBlur","placeholder","aria-label","aria-describedby","Append","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8b1a094.chunk.js","sourcesContent":["const GithubAPI = {\r\n    getUser: async function(username) {\r\n        try {\r\n            let resp = await fetch(`https://api.github.com/users/${username}`);\r\n            if (resp.ok) {\r\n                return await resp.json();\r\n            } else {\r\n                throw Error(resp.status);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error obtaining user data\", error);\r\n            return ({\r\n                name:\"Error\",\r\n                login:error.message,\r\n                bio:\"Something went wrong :(\",\r\n                \r\n            })\r\n        }\r\n    },\r\n    getSuggestions: async function(partialUsername) {\r\n        try {\r\n            let resp = await fetch(`https://api.github.com/search/users?q=${partialUsername}&per_page=10`);\r\n            if (resp.ok) {\r\n                return await resp.json();\r\n            } else {\r\n                throw Error(resp.status);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error obtaining suggestions\", error);\r\n            return ({\r\n                items:[\r\n                    {\r\n                        login:\"Error \"+error.message\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    },\r\n}\r\nexport default GithubAPI;\r\n","import Card from 'react-bootstrap/Card';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { useState, useEffect } from 'react';\r\nimport GithubAPI from '../apis/GithubAPI';\r\n\r\nfunction GithubCard(props) {\r\n    const [userData, setUserData] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (props.username !== userData.login) {\r\n            GithubAPI.getUser(props.username).then((user) => {\r\n                user.fetched = true;\r\n                setUserData(user);\r\n            });\r\n        }\r\n    }, [props.username, userData.login]);\r\n\r\n    return (\r\n        <Card className=\"github-card\">\r\n            <Card.Img variant=\"top\" src={userData.avatar_url} />\r\n            {(userData.fetched ? \r\n                <>\r\n                    <Card.Body>\r\n                        <Card.Title>{userData.name}</Card.Title>\r\n                        <Card.Subtitle className=\"text-muted\">{userData.login}</Card.Subtitle>\r\n                        <Card.Text>\r\n                            {userData.bio ? userData.bio : \"Github user\"}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <svg className=\"mr-2\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\"><path fillRule=\"evenodd\" d=\"M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z\"></path></svg>\r\n                        <span className=\"\">Repositories:</span> {userData.public_repos}\r\n                    </Card.Footer>\r\n                </>\r\n                :\r\n                <div className=\"spinner-container\">\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </div>)\r\n            }\r\n        </Card>\r\n    )\r\n}\r\nexport default GithubCard;","import { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport GithubCard from \"./GithubCard\";\r\n\r\n\r\nfunction ToggleableCard(props) {\r\n    const [showUser, setShowUser] = useState(false);\r\n    function handleToggle() {\r\n        setShowUser(state => !state);\r\n    }\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleToggle}>Toggle Card</Button>\r\n            {showUser && <GithubCard username={props.username}></GithubCard>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToggleableCard;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ToggleableCard from './components/ToggleableCard';\nimport GithubCard from './components/GithubCard';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport GithubAPI from './apis/GithubAPI';\nimport { useState, useRef, useEffect } from 'react';\nimport { getDebouncer } from \"./apis/DebounceAPI\";\n\n\nfunction App() {\n  //form holds current text input value {current} and last submitted value {final}\n  const [form, setForm] = useState({final:\"infinitymeme\",current:\"\"});\n  const suggestionsBox = useRef(); //component ref for manual sizing for transitions\n  const [suggestions, setSuggestions] = useState([]); //array of search results for username suggestions\n  const [showSuggestions, setShowSuggestions] = useState(true);\n\n  //use a ref so the timers persist thru renders\n  //unfortunately it makes it kinda ugly to call since you add a .current but that's just react\n  const getSuggestions = useRef(getDebouncer(loadSuggestions, 500));\n  function loadSuggestions(partialUsername) {\n    if (partialUsername) GithubAPI.getSuggestions(partialUsername).then(suggs => {\n      setSuggestions(suggs);\n    });\n  }\n  \n  function handleFormChange(event) {\n    setForm((form) => ({...form, current:event.target.value}));\n    setShowSuggestions(true);\n    getSuggestions.current(event.target.value);\n  }\n  function finalize() {\n    setForm((form) => ({...form, final:form.current}));\n    setShowSuggestions(false);\n  }\n  function handleUseSuggestion(event) {\n    setForm({final:event.target.innerText, current:event.target.innerText});\n  }\n  function handleKeyDown(event) {\n    if (event.code === \"Enter\") {\n      finalize();\n    } else if (event.code === \"Tab\") {\n      handleFocusIn();\n      event.preventDefault();\n    }\n  }\n  useEffect(() => {\n    //handles animations on search bar\n    if (showSuggestions) {\n      //workaround for the fact that height:auto doesn't have transitions\n      let preHeight = suggestionsBox.current.clientHeight;\n      suggestionsBox.current.style.transitionDuration = \"0\"; //disable transitions\n      suggestionsBox.current.style.height = \"auto\"; //calc auto height (what it should be)\n      let autoHeight = suggestionsBox.current.clientHeight;\n      suggestionsBox.current.style.height = preHeight+\"px\"; //back to what it was\n      suggestionsBox.current.style.transitionDuration = \"\"; //enable transitions\n      if (suggestionsBox.current.clientHeight || true) { //forces re-eval of clientHeight for css transition, wrapped in if so ESLint doesn't complain about unused expressions\n        suggestionsBox.current.style.height = autoHeight+\"px\"; //apply auto height and watch the transition fly\n      }\n    } else {\n      suggestionsBox.current.style.height = \"0px\";\n    }\n  }, [showSuggestions, suggestions])\n\n  function handleFocusIn(event) {\n    setShowSuggestions(true);\n  }\n  function handleFocusOut(event) {\n    setShowSuggestions(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <InputGroup className=\"mb-3\" onKeyDown={handleKeyDown}>\n          <ListGroup className=\"suggestions\" ref={suggestionsBox}>\n            {suggestions.items && suggestions.items.map(user => ( \n              // use mouse down instead of click since blur happens on mouse down, not mouse up\n              // causing the box to minimize\n              <ListGroup.Item action onMouseDown={handleUseSuggestion} key={user.id}>\n                {user.login}\n              </ListGroup.Item>\n              ))}\n          </ListGroup>\n        <FormControl value={form.current}\n          onChange={handleFormChange}\n          onFocus={handleFocusIn}\n          onBlur={handleFocusOut}\n          onClick={handleFocusIn}\n          placeholder=\"Github username\"\n          aria-label=\"Github username\"\n          aria-describedby=\"basic-addon2\"\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-primary\" onClick={finalize}>Update Card</Button>\n        </InputGroup.Append>\n        \n      </InputGroup>\n      <GithubCard username={form.final}></GithubCard>\n      <h3>Toggleable Version:</h3>\n      <ToggleableCard username={form.final}></ToggleableCard>\n    </div>\n  );\n}\n\nexport default App;","//minimal debouncer created by Riley Ferise\r\n/**\r\n * Produces a function with a built in delay for debouncing\r\n * @param {Function} callback - Function to execute\r\n * @param {Number} delay - (in milliseconds)\r\n * @returns A function that executes the callback after the delay using the provided args\r\n */\r\nexport function getDebouncer(callback, delay) {\r\n    let timeout = null;\r\n    return (...args) => {\r\n        if (timeout) clearTimeout(timeout);\r\n        timeout = setTimeout(() => {\r\n            timeout = null;\r\n            callback(...args);\r\n        }, delay);\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}